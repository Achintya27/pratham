# Generated by Django 5.0 on 2024-02-15 07:05

import django.core.validators
import utility.field
import utility.malicious_validator
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CircuitParamACDC',
            fields=[
                ('created_at', utility.field.UnixTimestampField(null=True)),
                ('updated_at', utility.field.UnixTimestampField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('circuit_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('grid_inductance', models.FloatField(validators=[django.core.validators.MaxValueValidator(100000.0)])),
                ('grid_frequency', models.FloatField(validators=[django.core.validators.MaxValueValidator(500)])),
                ('dead_time', models.FloatField(validators=[django.core.validators.MaxValueValidator(100000000.0)])),
                ('power_factor_cospi', models.FloatField(validators=[django.core.validators.MaxValueValidator(1.0)])),
                ('modulation_index', models.FloatField(validators=[django.core.validators.MaxValueValidator(1.0)])),
            ],
            options={
                'db_table': 'cp_acdc',
            },
        ),
        migrations.CreateModel(
            name='CircuitParamFlybackForword',
            fields=[
                ('created_at', utility.field.UnixTimestampField(null=True)),
                ('updated_at', utility.field.UnixTimestampField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('circuit_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('duty', models.FloatField(validators=[django.core.validators.MaxValueValidator(1.0)])),
                ('magnetising_inductor', models.FloatField(validators=[django.core.validators.MaxValueValidator(100000.0)])),
                ('output_capacitor', models.FloatField(validators=[django.core.validators.MaxValueValidator(100000.0)])),
                ('turns_ratio', models.FloatField(validators=[django.core.validators.MaxValueValidator(10000.0)])),
            ],
            options={
                'db_table': 'cp_flybackforward',
            },
        ),
        migrations.CreateModel(
            name='CircuitParamBoost',
            fields=[
                ('created_at', utility.field.UnixTimestampField(null=True)),
                ('updated_at', utility.field.UnixTimestampField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('circuit_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('duty', models.FloatField(validators=[django.core.validators.MaxValueValidator(1.0)])),
                ('input_inductor', models.FloatField(validators=[django.core.validators.MaxValueValidator(100000.0)])),
                ('output_capacitor', models.FloatField(validators=[django.core.validators.MaxValueValidator(100000.0)])),
            ],
            options={
                'db_table': 'cp_boost',
            },
        ),
        migrations.CreateModel(
            name='CircuitParamBuck',
            fields=[
                ('created_at', utility.field.UnixTimestampField(null=True)),
                ('updated_at', utility.field.UnixTimestampField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('circuit_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('duty', models.FloatField(validators=[django.core.validators.MaxValueValidator(1.0)])),
                ('output_inductor', models.FloatField(validators=[django.core.validators.MaxValueValidator(100000.0)])),
                ('output_capacitor', models.FloatField(validators=[django.core.validators.MaxValueValidator(100000.0)])),
            ],
            options={
                'db_table': 'cp_buck',
            },
        ),
        migrations.CreateModel(
            name='CircuitParamCukSepic',
            fields=[
                ('created_at', utility.field.UnixTimestampField(null=True)),
                ('updated_at', utility.field.UnixTimestampField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('circuit_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('duty', models.FloatField(validators=[django.core.validators.MaxValueValidator(1.0)])),
                ('input_inductor', models.FloatField(validators=[django.core.validators.MaxValueValidator(100000.0)])),
                ('output_inductor', models.FloatField(validators=[django.core.validators.MaxValueValidator(100000.0)])),
                ('input_capacitor', models.FloatField(validators=[django.core.validators.MaxValueValidator(100000.0)])),
                ('output_capacitor', models.FloatField(validators=[django.core.validators.MaxValueValidator(100000.0)])),
            ],
            options={
                'db_table': 'cp_cuksepic',
            },
        ),
        migrations.CreateModel(
            name='CircuitParamHalfFullPush',
            fields=[
                ('created_at', utility.field.UnixTimestampField(null=True)),
                ('updated_at', utility.field.UnixTimestampField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('circuit_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('leakage_inductor', models.FloatField(validators=[django.core.validators.MaxValueValidator(100000.0)])),
                ('turns_ratio', models.FloatField(validators=[django.core.validators.MaxValueValidator(10000.0)])),
                ('duty', models.FloatField(validators=[django.core.validators.MaxValueValidator(1.0)])),
            ],
            options={
                'db_table': 'cp_halffullpush',
            },
        ),
        migrations.CreateModel(
            name='DevicesCategories',
            fields=[
                ('created_at', utility.field.UnixTimestampField(null=True)),
                ('updated_at', utility.field.UnixTimestampField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('device_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, unique=True, validators=[utility.malicious_validator.validate_no_malicious_content])),
                ('image_url', models.ImageField(max_length=256, upload_to='devicesCategories/')),
                ('group_id', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3)])),
            ],
            options={
                'db_table': 'device_category',
            },
        ),
        migrations.CreateModel(
            name='DeviceThermalInfo',
            fields=[
                ('created_at', utility.field.UnixTimestampField(null=True)),
                ('updated_at', utility.field.UnixTimestampField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('device_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('number_of_parallel_devices', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('rgon', models.FloatField(validators=[django.core.validators.MaxValueValidator(1000.0)])),
                ('rgoff', models.FloatField(validators=[django.core.validators.MaxValueValidator(1000.0)])),
                ('thermal_resistance', models.FloatField(validators=[django.core.validators.MaxValueValidator(100)])),
                ('heat_sink_temp', models.TextField(max_length=256)),
            ],
            options={
                'db_table': 'device_thermalinfo',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('created_at', utility.field.UnixTimestampField(null=True)),
                ('updated_at', utility.field.UnixTimestampField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('order_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, validators=[utility.malicious_validator.validate_no_malicious_content])),
                ('circuit_id', models.UUIDField()),
                ('status', models.CharField(choices=[('placed', 'placed'), ('save', 'save'), ('shipped', 'shipped')], max_length=10)),
            ],
            options={
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='UnitsModel',
            fields=[
                ('created_at', utility.field.UnixTimestampField(null=True)),
                ('updated_at', utility.field.UnixTimestampField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('unit_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('unit', models.CharField(max_length=5, unique=True)),
                ('unit_associated', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'units',
            },
        ),
        migrations.CreateModel(
            name='VoltagePower',
            fields=[
                ('created_at', utility.field.UnixTimestampField(null=True)),
                ('updated_at', utility.field.UnixTimestampField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('voltage_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('input_voltage', models.FloatField(validators=[django.core.validators.MaxValueValidator(10000.0)])),
                ('output_voltage_current', models.FloatField(validators=[django.core.validators.MaxValueValidator(10000.0)])),
                ('output_power', models.FloatField(validators=[django.core.validators.MaxValueValidator(100000.0)])),
                ('switching_freq', models.FloatField(validators=[django.core.validators.MaxValueValidator(100000.0)])),
                ('gate_voltage', models.FloatField(validators=[django.core.validators.MaxValueValidator(50)])),
            ],
            options={
                'db_table': 'voltage_power',
            },
        ),
    ]
