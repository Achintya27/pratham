# Generated by Django 5.0 on 2024-02-15 07:05

import django.core.validators
import django.db.models.deletion
import utility.field
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('elitpowertool', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MosfetRawData',
            fields=[
                ('created_at', utility.field.UnixTimestampField(null=True)),
                ('updated_at', utility.field.UnixTimestampField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('mosfet_raw_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('gate_threshold_voltage', models.FloatField(validators=[django.core.validators.MaxValueValidator(50)])),
                ('gate_plateau_voltage', models.FloatField(validators=[django.core.validators.MaxValueValidator(50)])),
                ('gate_resistance', models.FloatField(validators=[django.core.validators.MaxValueValidator(100000)])),
                ('input_capacitance', models.FloatField(validators=[django.core.validators.MaxValueValidator(100000)])),
                ('gate_drain_charge', models.FloatField(validators=[django.core.validators.MaxValueValidator(100000)])),
                ('diode_forward_voltage', models.FloatField(validators=[django.core.validators.MaxValueValidator(100000)])),
                ('reverse_recovery_time', models.FloatField(validators=[django.core.validators.MaxValueValidator(100000)])),
                ('thermal_resistance_junction', models.FloatField(validators=[django.core.validators.MaxValueValidator(50)])),
                ('reverse_recovery_charge', models.FloatField(validators=[django.core.validators.MaxValueValidator(100000)])),
                ('reverse_trans_cap', models.FloatField(validators=[django.core.validators.MaxValueValidator(100000)])),
                ('internal_gate_resistance', models.FloatField(validators=[django.core.validators.MaxValueValidator(100000)])),
                ('coordinates_data', models.TextField(max_length=512)),
                ('pdfimage_url', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'mosfet_raw',
            },
        ),
        migrations.CreateModel(
            name='MosfetData',
            fields=[
                ('created_at', utility.field.UnixTimestampField(null=True)),
                ('updated_at', utility.field.UnixTimestampField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('mosfet_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('power_loss', models.FloatField(validators=[django.core.validators.MaxValueValidator(1000000000000.0)])),
                ('swon_power_loss', models.FloatField(validators=[django.core.validators.MaxValueValidator(1000000000000.0)])),
                ('swoff_power_loss', models.FloatField(validators=[django.core.validators.MaxValueValidator(1000000000000.0)])),
                ('cond_power_loss', models.FloatField(validators=[django.core.validators.MaxValueValidator(1000000000000.0)])),
                ('final_temp', models.FloatField(validators=[django.core.validators.MaxValueValidator(1000000000000.0)])),
                ('final_resistance', models.FloatField(validators=[django.core.validators.MaxValueValidator(1000000000000.0)])),
                ('cond_power_loss_unit', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='cond_power_loss', to='elitpowertool.unitsmodel')),
            ],
            options={
                'db_table': 'mosfet',
            },
        ),
    ]
